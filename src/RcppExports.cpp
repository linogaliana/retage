// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// taxation_inheritance
Rcpp::NumericVector taxation_inheritance(Rcpp::NumericVector x, double deduction, Rcpp::NumericVector bounds_legal, Rcpp::NumericVector taxes);
RcppExport SEXP _REtage_taxation_inheritance(SEXP xSEXP, SEXP deductionSEXP, SEXP bounds_legalSEXP, SEXP taxesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type deduction(deductionSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type bounds_legal(bounds_legalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type taxes(taxesSEXP);
    rcpp_result_gen = Rcpp::wrap(taxation_inheritance(x, deduction, bounds_legal, taxes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_REtage_taxation_inheritance", (DL_FUNC) &_REtage_taxation_inheritance, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_REtage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
